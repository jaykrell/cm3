% Copyright (C) 1992, Digital Equipment Corporation
% All rights reserved.
% See the file COPYRIGHT for a full description.
%
% Last modified on Sat Jan  7 14:58:01 PST 1995 by kalsow  
%      modified on Thu Jul 14 13:10:18 PDT 1994 by mcjones 
%      modified on Thu Jun 17 19:14:47 PDT 1993 by harrison
%      modified on Thu May  6 21:38:22 PDT 1993 by mjordan

Interface("OSConfig")

Module("OSErrorPosix")
Module("FilePosix")

implementation("FSPosix")
implementation("PipePosix")
implementation("PathnamePosix")
implementation("SocketPosix")
implementation("OSConfigPosix")

module("ProcessPosixCommon")
if equal (TARGET, "NT386")
    implementation("ProcessCygwin")
else
    implementation("ProcessPosix")
end

c_source("FilePosixC")
interface("FilePosixC")

interface("OSConfigPosixC")
c_source("OSConfigPosixC")

interface("FSPosixC")
c_source("FSPosixC")

local readonly DefaultOSName = {
%  "AIX386" : "AIX",
%  "ALPHA_OSF" : "Digital Unix",
%  "AP3000" : "Unix",
   "ARM_DARWIN" : "Darwin",
%  "ARM" : "Unix",
%  "DS3100" : "Ultrix",
%  "FreeBSD" : "FreeBSD",
%  "FreeBSD2" : "FreeBSD",
%  "HP300" : "HP/UX",
%  "HPPA" : "HP/UX",
   "I386_INTERIX" : "Interix",
%  "IBMR2" : "AIX",
%  "IBMRT" : "AIX",
%  "IRIX5" : "Irix",
%  "LINUX" : "Linux",
%  "LINUXELF" : "Linux",
%  "NEXT" : "NextOS",
   "NT386" : "Win32",
%  "OKI" : "Unix",
%  "OS2" : "OS/2",
%  "SEQUENT" : "Unix",
   "SOLgnu" : "Solaris",
   "SOLsun" : "Solaris",
%  "SPARC" : "SunOS",
%  "SUN3" : "SunOS",
%  "SUN386" : "SunOS",
%  "UMAX" : "Unix",
%  "VAX" : "Ultrix",
%  "FreeBSD3" : "FreeBSD",
   "FreeBSD4" : "FreeBSD",
%  "FBSD_ALPHA" : "FreeBSD",
   "LINUXLIBC6" : "Linux",
   "I386_DARWIN" : "Darwin",
   "PPC_DARWIN" : "Darwin",
%  "BSDI4" : "BSD/OS",
   "NT386GNU" : "Cygwin",
   "PPC_LINUX" : "Linux",
   "AMD64_NETBSD" : "NetBSD",
   "AMD64_DARWIN" : "Darwin",
   "AMD64_LINUX" : "Linux",
   "SPARC32_LINUX" : "Linux",
   "SPARC64_LINUX" : "Linux",
   "AMD64_OPENBSD" : "OpenBSD",
   "SPARC64_OPENBSD" : "OpenBSD",
   "PPC32_OPENBSD" : "OpenBSD",
   "MIPS64_OPENBSD" : "OpenBSD",
   "SPARC64_SOLARIS" : "Solaris",
   "I386_OPENBSD" : "OpenBSD",
   "AMD64_FREEBSD" : "FreeBSD",
   "PA32_HPUX" : "HPUX",
   "PA64_HPUX" : "HPUX",


   "AIX" : "AIX",
   "CYGWIN" : "Cygwin",
   "DARWIN" : "Darwin",
   "FREEBSD" : "FreeBSD",
   "HPUX" : "HPUX",
   "INTERIX" : "Interix",
   "IRIX" : "Irix",
   "LINUX" : "Linux",
   "NETBSD" : "NetBSD",
   "NT" : "Win32",
   "OPENBSD" : "OpenBSD",
   "OS2" : "OS/2",
   "SOLARIS" : "Solaris",
   "TRU64" : "Digital Unix",
}

local readonly DefaultArch = {
%  "AIX386" : "i386",
%  "ALPHA_OSF" : "alpha",
%  "AP3000" : "apollo",
%  "ARM" : "acorn risc",
   "ARM_DARWIN" : "arm",
%  "DS3100" : "mips",
%  "FreeBSD" : "i486",
%  "FreeBSD2" : "i486",
%  "HP300" : "hp300",
%  "HPPA" : "hppa",
   "I386_INTERIX" : "i686",
%  "IBMR2" : "IBM romp",
%  "IBMRT" : "IBM RT",
%  "IRIX5" : "mips",
%  "LINUX" : "i486",
%  "LINUXELF" : "i486",
%  "NEXT" : "m68K",
   "NT386" : "i686",
%  "OKI" : "m68K",
%  "OS2" : "i486",
%  "SEQUENT" : "m68K",
   "SOLgnu" : "sparc",
   "SOLsun" : "sparc",
%  "SPARC" : "sparc",
%  "SUN3" : "sparc3",
%  "SUN386" : "i386",
%  "UMAX" : "m68K",
%  "VAX" : "vax",
%  "FreeBSD3" : "i486",
   "FreeBSD4" : "i686",
%  "FBSD_ALPHA" : "alpha",
   "LINUXLIBC6" : "i686",
   "I386_DARWIN" : "i686",
   "PPC_DARWIN" : "ppc",
%  "BSDI4" : "i486",
   "NT386GNU" : "i686",
   "PPC_LINUX" : "ppc",
   "AMD64_DARWIN" : "AMD64",
   "AMD64_NETBSD" : "AMD64",
   "AMD64_OPENBSD" : "AMD64",
   "AMD64_LINUX" : "AMD64",
   "SPARC32_LINUX" : "sparc",
   "SPARC64_LINUX" : "sparc64",
   "SPARC64_OPENBSD" : "sparc64",
   "PPC32_OPENBSD" : "ppc",
   "MIPS64_OPENBSD" : "mips64",
   "SPARC64_SOLARIS" : "sparc64",
   "I386_OPENBSD" : "i686",
   "AMD64_FREEBSD" : "AMD64",
   "PA32_HPUX" : "hppa",
   "PA64_HPUX" : "hppa64",


    "ALPHA" : "alpha",
    "AMD64" : "AMD64",
    "ARM" : "arm",
    "HPPA" : "hppa",
    "HPPA64" : "hppa64",
    "I386" : "x86",
    "IA64" : "IA64",
    "M68K" : "m68K",
    "MIPS" : "mips",
    "MIPS64" : "mips64",
    "PPC": "ppc",
    "PPC64": "ppc64",
    "SPARC" : "sparc",
    "SPARC64" : "sparc64",
    "VAX" : "vax",
}

local readonly proc MakeInterfaceForConstant(Name, Value) is
    > Name & ".i3.tmp" in
        write("INTERFACE " & Name & ";\n")
        write("CONST Value = " & Value & ";\n")
        write("END " & Name & ".")
        derived_interface(Name, HIDDEN)
    end
    cp_if(Name & ".i3.tmp", Name & ".i3")
end

if defined("TARGET_OS")
    MakeInterfaceForConstant("OSConfigPosix_DefaultOSName", "\"" & DefaultOSName{TARGET_OS} & "\"")
else
    MakeInterfaceForConstant("OSConfigPosix_DefaultOSName", "\"" & DefaultOSName{TARGET} & "\"")
end

if defined("TARGET_ARCH")
    MakeInterfaceForConstant("OSConfigPosix_DefaultArch", "\"" & DefaultArch{TARGET_ARCH} & "\"")
else
    MakeInterfaceForConstant("OSConfigPosix_DefaultArch", "\"" & DefaultArch{TARGET} & "\"")
end

if equal(TARGET, "ALPHA_OSF") or equal(TARGET, "DS3100")
    MakeInterfaceForConstant("SocketPosix_IsUltrixOrOSF", "TRUE")
else
    MakeInterfaceForConstant("SocketPosix_IsUltrixOrOSF", "FALSE")
end
